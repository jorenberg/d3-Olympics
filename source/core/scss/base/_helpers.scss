// Angstrom Helper(s)


// 1. d3-Olympics Clearfix
// For modern browsers:
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// 2. d3-Olympics Box sizing
// The box-sizing property is used to alter the default CSS box model used to calculate widths and heights of elements.
// Values: content-box || border-box || inherit || initial || unset

@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// 3. d3-Olympics Opacity: Cross Browser

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-IE: ($opacity * 100);
  -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity-IE)';
  // IE 5-7
  filter: alpha(opacity=$opacity-IE);
}

// 4. d3-Olympics Border Radius

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

// 5. The @mixin directive for ::selection.
// The ::selection CSS pseudo-element applies rules to the portion of a document,
// that has been highlighted (e.g. selected with the mouse or another pointing device) by the user.
/// Note: Only a small subset of CSS properties can be used in a rule using ::selection in it's
/// selector: color, background-color, cursor, outline, text-decoration, text-emphasis-color and text-shadow.

@mixin axix-selection ($background, $color) {
  background: $background;
  color: $color;
}

// 6. d3-Olympics CSS3 calc mixin.

@mixin axix-calc($property, $value) {
  #{$property}: -webkit-calc(#{$value});
  #{$property}: -moz-calc(#{$value});
  #{$property}: calc(#{$value});
}

// 7. d3-Olympics - The @function directive to strip unit.

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// 8. d3-Olympics - The @function directive to clamp a number.
// Clamping a number means restricting it between min and max values.
// Usage:
// 1. If the value is greater than the maximum value, it returns $max
// 2. If the value is lesser than or equals to the maximum value and
//  - if the value is lesser than the minimum value, it returns $min
//  - if the value is greater than or equals to the minimum value, it returns $value

@function clamp($value, $min, $max) {
  @return if($value > $max, $max, if($value < $min, $min, $value));
}
